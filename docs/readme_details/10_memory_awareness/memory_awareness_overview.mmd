graph TD
    subgraph "Symbol Memory Awareness"
        A[GC-aware Deletion] --> B[Respects ENABLE_ORIGIN];
        A --> C[Respects MEMORY_AWARE_DELETE];
        A --> D[Symbol.delete[] Method];

        E[Proactive Memory Management] --> F[Symbol.context Attribute];
        E --> G[DefDict for Context];
        E --> H[Symbol.clear_context[] Method];

        I[deep_del Utility] --> J[Recursively Deletes Attributes];
        I --> K[Handles Unreferenced Objects];
        I --> L[Used by slim#40;#41; and clear_context#40;#41;];
    end

    subgraph "Key Concepts"
        M[Python's Garbage Collector] --> N[Reference Counting];
        M --> O[Cycle Detection];
        P[Weak References] --> Q[Avoids Strong Cycles];
    end

    subgraph "Benefits"
        R[Reduced Memory Footprint] --> S[Efficient Resource Utilization];
        T[Prevention of Memory Leaks] --> U[Stable Long-Running Applications];
        V[Predictable Performance] --> W[Minimizes GC Pauses];
    end
    style V fill:lighten#40;#0bcd6a, 30%#41;,stroke:#333,stroke-width:2px,color:#000000;

    style A fill:#9655d4,stroke:#333,stroke-width:2px,color:#FFFFFF;
    style E fill:#829b28,stroke:#333,stroke-width:2px,color:#000000;
    style I fill:#67de5d,stroke:#333,stroke-width:2px,color:#000000;
    style M fill:#2ff744,stroke:#333,stroke-width:2px,color:#000000;
    style P fill:#935cd8,stroke:#333,stroke-width:2px,color:#FFFFFF;
    style R fill:#70f9e7,stroke:#333,stroke-width:2px,color:#000000;
    style T fill:#18d79f,stroke:#333,stroke-width:2px,color:#000000;
    style V fill:#0bcd6a,stroke:#333,stroke-width:2px,color:#000000;
