graph TD
    subgraph "Symbol Scheduling Mechanism"
        A[ScheduledJob] --> B{Scheduler.add_job#40;#41;};
        B -- "Adds to" --> C[Min-Heap #40;_schedule#41;];
        C -- "Stores in" --> D[Job Map #40;job_map#41;];
        D -- "Persists #40;Optional#41;" --> E[Schedule File];
    end

    subgraph "Scheduler Execution #40;_run#40;#41;#41;"
        F[Scheduler.start[]]; --> G{Main Loop #40;Thread#41;};
        G -- "Periodically Checks" --> H[Next Job in Heap];
        H -- "Time to Run" --> I[Execute Job #40;func#41;];
        I -- "If Recurring" --> J[Recalculate next_run];
        J --> B;
        I -- "If One-Off" --> K[Remove from Job Map];
    end

    subgraph "Job Definition #40;ScheduledJob#41;"
        L[Callable Function] --> M[func];
        N[Arguments] --> O[args, kwargs];
        P[Schedule #40;cron, datetime, Symbol#41;] --> Q[schedule];
        Q -- "Calculates" --> R[next_run];
    end

    subgraph "Benefits"
        S[Automated Task Execution] --> T[Reliable Operations];
        U[Flexible Scheduling] --> V[Supports Diverse Timings];
        W[Decoupled Logic] --> X[Separates Task from Execution];
        Y[Persistence] --> Z[Survives Restarts];
    end
    style Y fill:#da0b47,stroke:#333,stroke-width:2px,color:#FFFFFF;

    style A fill:#0a0709,stroke:#333,stroke-width:2px,color:#FFFFFF;
    style F fill:#3a0598,stroke:#333,stroke-width:2px,color:#FFFFFF;
    style L fill:#92925a,stroke:#333,stroke-width:2px,color:#000000;
    style N fill:#d637f6,stroke:#333,stroke-width:2px,color:#FFFFFF;
    style P fill:lighten(#6393b9, 30%),stroke:#333,stroke-width:2px,color:#000000;
    style S fill:lighten(#541e4b, 30%),stroke:#333,stroke-width:2px,color:#FFFFFF;
    style U fill:#a1d64a,stroke:#333,stroke-width:2px,color:#000000;
    style W fill:#9f19db,stroke:#333,stroke-width:2px,color:#FFFFFF;
    style Y fill:#da0b47,stroke:#333,stroke-width:2px,color:#FFFFFF;
